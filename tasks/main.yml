---
- name: Create directorys
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{docker_swag_puid}}"
    group: "{{docker_swag_pgid}}"
    mode: 0755
  with_items:
    - "{{docker_swag_dir}}/config/crontabs"
    - "{{docker_swag_dir}}/config/etc"
    - "{{docker_swag_dir}}/config/fail2ban"
    - "{{docker_swag_dir}}/config/keys"
    - "{{docker_swag_dir}}/config/log"
    - "{{docker_swag_dir}}/config/nginx/proxy-confs"
    - "{{docker_swag_dir}}/config/www"

- name: Copy .htpasswd file
  ansible.builtin.copy:
    content: "{{ docker_swag_htpasswd }}"
    dest: "{{docker_swag_dir}}/config/nginx/.htpasswd"
    owner: "{{docker_swag_puid}}"
    group: "{{docker_swag_pgid}}"
    force: "{{docker_swag_force}}"
    mode: 0664
  register: htpasswd_file

- name: Update ownership
  ansible.builtin.file:
    path: "{{docker_swag_dir}}"
    state: directory
    owner: "{{docker_swag_puid}}"
    group: "{{docker_swag_pgid}}"
    recurse: yes

- name: Update permissions for dns-config
  ansible.builtin.file:
    path: "{{docker_swag_dir}}/config/dns-conf"
    state: directory
    owner: "{{docker_swag_puid}}"
    group: "{{docker_swag_pgid}}"
    mode: 0600
    recurse: yes

- name: Copy dns-conf/cloudflare.ini file
  ansible.builtin.template:
    src: dns-conf/cloudflare.ini.j2
    dest: "{{docker_swag_dir}}/config/dns-conf/cloudflare.ini"
    owner: "{{docker_swag_puid}}"
    group: "{{docker_swag_pgid}}"
    force: "{{docker_swag_force}}"
    mode: 0600
  register: dnsconf_file

- name: Copy nginx/ssl.conf file
  ansible.builtin.template:
    src: nginx/ssl.conf.j2
    dest: "{{docker_swag_dir}}/config/nginx/ssl.conf"
    owner: "{{docker_swag_puid}}"
    group: "{{docker_swag_pgid}}"
    force: "{{docker_swag_force}}"
    mode: 0664
  register: sslconf_file

- name: Ensure linuxserver/swag image is pulled
  community.docker.docker_image:
    name: lscr.io/linuxserver/swag
    source: pull
    force_source: yes
  register: pulled

- name: Remove swag container
  community.docker.docker_container:
    name: swag
    state: absent
  when:
    htpasswd_file.changed
    or
    dnsconf_file.changed
    or
    sslconf_file.changed
    or
    pulled.changed

- name: Get infos on swag container
  community.docker.docker_container_info:
    name: swag
  register: result

- name: Create swag container
  ansible.builtin.shell: |
    docker run -d \
    --name=swag \
    --cap-add=NET_ADMIN \
    -e PUID={{docker_swag_puid}} \
    -e PGID={{docker_swag_pgid}} \
    -e TZ={{docker_swag_tz}} \
    -e URL="{{docker_swag_url}}" \
    -e SUBDOMAINS="{{docker_swag_subdomains}}" \
    -e VALIDATION={{docker_swag_validation}} \
    -e DNSPLUGIN={{docker_swag_dnsplugin}} \
    -e EMAIL="{{docker_swag_email}}" \
    -e ONLY_SUBDOMAINS="{{docker_swag_only_subdomains}}" \
    -e EXTRA_DOMAINS="{{docker_swag_extra_domains}}" \
    -v {{docker_swag_dir}}/config:/config:Z \
    -p 80:80 \
    -p 443:443 \
    --network=app-network \
    --restart unless-stopped \
    lscr.io/linuxserver/swag
  when:
    htpasswd_file.changed
    or
    dnsconf_file.changed
    or
    sslconf_file.changed
    or
    pulled.changed
    or
    result.exists == false

- name: Add swag container to bridge network
  ansible.builtin.shell:
    cmd: "docker network connect bridge swag"
  when:
    htpasswd_file.changed
    or
    dnsconf_file.changed
    or
    sslconf_file.changed
    or
    pulled.changed
    or
    result.exists == false