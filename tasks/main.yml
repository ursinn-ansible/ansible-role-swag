---
- name: set vars
  set_fact:
    docker_image: '{{ role_swag_image }}'
    docker_container: '{{ role_swag_container }}'
    docker_puid: '{{ role_swag_puid }}'
    docker_pgid: '{{ role_swag_pgid }}'
    docker_tz: '{{ role_swag_tz }}'
    docker_dir: '{{ role_swag_dir }}/config'
    docker_network: '{{ role_swag_network }}'
    swag_nginx_dir: '{{ role_swag_dir }}/config/nginx'
    swag_dns_config_dir: '{{ role_swag_dir }}/config/dns-conf'

- name: Create directorys
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ docker_puid }}"
    group: "{{ docker_pgid }}"
    mode: 0755
  with_items:
    - "{{ swag_nginx_dir }}/proxy-confs"

- name: Copy .htpasswd file
  ansible.builtin.copy:
    content: "{{ role_swag_htpasswd }}"
    dest: "{{ swag_nginx_dir }}/.htpasswd"
    owner: "{{ docker_puid }}"
    group: "{{ docker_pgid }}"
    force: "{{ role_swag_force }}"
    mode: 0664
  register: htpasswd_file

- name: Update ownership
  ansible.builtin.file:
    path: "{{ docker_dir }}"
    state: directory
    owner: "{{ docker_puid }}"
    group: "{{ docker_pgid }}"
    recurse: yes

- name: Update permissions for dns-config
  ansible.builtin.file:
    path: "{{ swag_dns_config_dir }}"
    state: directory
    owner: "{{ docker_puid }}"
    group: "{{ docker_pgid }}"
    mode: 0600
    recurse: yes

- name: Copy dns-conf/cloudflare.ini file
  ansible.builtin.template:
    src: dns-conf/cloudflare.ini.j2
    dest: "{{ swag_dns_config_dir }}/cloudflare.ini"
    owner: "{{ docker_puid }}"
    group: "{{ docker_pgid }}"
    force: "{{ role_swag_force }}"
    mode: 0600
  register: dnsconf_file

- name: Copy nginx/ssl.conf file
  ansible.builtin.template:
    src: nginx/ssl.conf.j2
    dest: "{{ swag_nginx_dir }}/ssl.conf"
    owner: "{{ docker_puid }}"
    group: "{{ docker_pgid }}"
    force: "{{ role_swag_force }}"
    mode: 0664
  register: sslconf_file

- name: Copy proxy-confs files
  ansible.builtin.template:
    src: proxy-confs/{{ item }}.conf.j2
    dest: "{{ swag_nginx_dir }}/proxy-confs/{{ item }}.conf"
    owner: "{{ docker_puid }}"
    group: "{{ docker_pgid }}"
    force: "{{ role_swag_force }}"
    mode: 0664
  with_items: "{{ role_swag_proxy_confs }}"
  register: proxy_configs

- name: Ensure image is pulled
  community.docker.docker_image:
    name: "{{ docker_image }}"
    source: pull
    force_source: yes
  register: pulled

- name: Remove container
  community.docker.docker_container:
    name: "{{ docker_container }}"
    state: absent
  when:
    htpasswd_file.changed
    or
    dnsconf_file.changed
    or
    sslconf_file.changed
    or
    proxy_configs.changed
    or
    pulled.changed

- name: Get infos on container
  community.docker.docker_container_info:
    name: "{{ docker_container }}"
  register: result

- name: Create network
  community.docker.docker_network:
    name: "{{ docker_network }}"
    driver_options:
          com.docker.network.bridge.name: "br-{{ docker_network }}"

- name: Create swag container
  ansible.builtin.shell: |
    docker run -d \
    --name={{ docker_container }} \
    --cap-add=NET_ADMIN \
    -e PUID={{ docker_puid }} \
    -e PGID={{ docker_pgid }} \
    -e TZ={{ docker_tz }} \
    -e URL="{{ role_swag_url }}" \
    -e SUBDOMAINS="{{ role_swag_subdomains }}" \
    -e VALIDATION={{ role_swag_validation }} \
    -e DNSPLUGIN={{ role_swag_dnsplugin }} \
    -e EMAIL="{{ role_swag_email }}" \
    -e ONLY_SUBDOMAINS="{{ role_swag_only_subdomains }}" \
    -e EXTRA_DOMAINS="{{ role_swag_extra_domains }}" \
    -v {{ docker_dir }}:/config:Z \
    -p 80:80 \
    -p 443:443 \
    --network={{ docker_network }} \
    --restart unless-stopped \
    {{ docker_image }}
  when:
    htpasswd_file.changed
    or
    dnsconf_file.changed
    or
    sslconf_file.changed
    or
    proxy_configs.changed
    or
    pulled.changed
    or
    result.exists == false

- name: Add swag container to bridge network
  ansible.builtin.shell:
    cmd: "docker network connect bridge {{ docker_container }}"
  when:
    htpasswd_file.changed
    or
    dnsconf_file.changed
    or
    sslconf_file.changed
    or
    proxy_configs.changed
    or
    pulled.changed
    or
    result.exists == false
